# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include: 
      - v3/feature/*
      - v3/hotfix/*
      - v3/release/*
  tags:
    include:
      - v*

variables:
  - name: 'vmImageName'
    value: 'windows-2019'
  - name: 'nuGetOrgServiceCreds'
    value: 'NuGet.org (Vendr)'
  - name: 'packageName'
    value: 'Vendr.Checkout'

stages:

  - stage: build
    displayName: 'Build'
    dependsOn: [  ]
    pool:
      vmImage: $(vmImageName)
    jobs:

      - job: Build
        displayName: 'Build'
        dependsOn: [ ]
        steps:
              
          - task: UseDotNet@2
            displayName: 'Use .NET Core sdk 7.0.x'
            inputs:
               version: 7.0.x
               # includePreviewVersions: true

          - task: CmdLine@2
            inputs:
              script: './build.cmd Pack'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: artifacts

  - stage: deploy
    displayName: 'Deploy'
    condition: succeeded()
    dependsOn: [ build ]

    jobs:
    - deployment: deploy
      displayName: Deploy
      environment: 'development'
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps: 

              # Unstable Deploy
              - task: NuGetCommand@2
                displayName: 'Deploy to unstable feed'
                inputs:
                  command: 'push'
                  packagesToPush: '$(Pipeline.Workspace)/artifacts/**/*.nupkg;!$(Pipeline.Workspace)/artifacts/**/*.snupkg'
                  nuGetFeedType: 'internal'
                  publishVstsFeed: '576196d3-9f20-4a86-8fd6-b0d7428fe5ee/cfadaa44-aa4e-45d7-8303-91a38d020c50'

              # Release Deploy
              - task: NuGetCommand@2
                displayName: 'Deploy to NuGet.org'
                condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
                inputs:
                  command: push
                  nuGetFeedType: external
                  packagesToPush: '$(Pipeline.Workspace)/artifacts/**/*.nupkg;!$(Pipeline.Workspace)/artifacts/**/*.snupkg'
                  publishFeedCredentials: '$(nuGetOrgServiceCreds)'

              # - task: UseDotNet@2
              #   condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
              #   inputs:
              #     version: 3.0.100

              # - powershell: |
              #     # get the umbraco package file (assumes there is just one zip file package)
              #     $f = (Get-ChildItem -Path "$(Pipeline.Workspace)\artifacts\packages\*" -File -Include $(packageName).*.zip | Select-Object -First 1).FullName
              #     # assign the filename to a variable        
              #     echo "$f" 
              #     echo "##vso[task.setvariable variable=umbracoPackageFile]$f" 
              #   displayName: 'Get Umbraco Package path'
              #   condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))

              # - script: |
              #     dotnet tool install --global Umbraco.Tools.Packages
              #   condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
              #   displayName: 'Install UmbPack'

              # - script: |
              #     umbpack push $(umbracoPackageFile) -k %OUR_UMBRACO_API_KEY% -w v860,v850,v840,v830,v820 -c true -a $(packageName).*.zip 
              #   condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
              #   displayName: 'Deploy to Our Umbraco'
              #   env:
              #     OUR_UMBRACO_API_KEY: $(our-umbraco-api-key)